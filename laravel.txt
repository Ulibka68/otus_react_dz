PHP Laravel

Разрабатываю на React фронтенд SPA для задачи по просмотру каталога товаров с его фильтрацией.
Основная моя задача - разработать фильтр товаров каталога по типу yandex market.

Нужен backend сервер на php Laravel.
Php знаю, Laravel нет, времени изучить его сейчас нет.

Для разработки frontend необходимо создать самый простой сервер.
На мой взгляд существенно упростить его создание может Laravell.

Задачи сервера в ответ на запросы front выдавать JSON.
Также должна быть директория с изображениями (статика)
И директория с начальным HTML+CSS + JS bundle

Задачи сервера:
1. авторизация по логину паролю (максимально простая, но работающая, может содержать все известные уязвимости :) )

2. База MySQL

3. Сделать несколько стартовых сущностей:
user/password
товар: id, описание, изображение, цена

Сделать маршрут на get и post
Маршрут. Определяет адрес конкретной страницы или набора страниц на сайте. Маршрут связывает эти адреса с конкретным обработчиком, который будет вызван при запросе этих страниц.

Route::get('/', function () {
    return view('welcome');
});
в исходном варианте возвращается результат вызова view('welcome'). view($templateName) –

Route::post('/posts', function () {
    // Логика создания поста
});

Контроллер. Слой кода, в котором расположены обработчики страниц сайта. Они анализируют запрос (если нужно) и формируют ответ, который фреймворк отправляет пользователю.

Шаблон. Специальный файл, который используется для формирования HTTP-ответа.

В Laravel контроллером называют класс, который расположен в директории app/HTTP/Controllers. Методы этого класса связываются с конкретными маршрутами и отвечают за его обработку:

namespace App\Http\Controllers;

// Должен наследоваться от Controller
class PageController extends Controller
{
    public function about()
    {
        // Точка используется вместо /.
        // То есть шаблон находится по пути resources/views/page/about.blade.php
        return view('page.about');
    }

    public function team()
    {
        return view('page.team');
    }
}